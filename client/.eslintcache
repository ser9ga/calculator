[{"D:\\projects\\calculator-back\\client\\src\\index.js":"1","D:\\projects\\calculator-back\\client\\src\\App.js":"2","D:\\projects\\calculator-back\\client\\src\\reportWebVitals.js":"3","D:\\projects\\calculator-back\\client\\src\\Menu\\Login.js":"4","D:\\projects\\calculator-back\\client\\src\\Calc\\CalcProcessing.js":"5","D:\\projects\\calculator-back\\client\\src\\Calc\\Table.js":"6","D:\\projects\\calculator\\client\\src\\index.js":"7","D:\\projects\\calculator\\client\\src\\App.js":"8","D:\\projects\\calculator\\client\\src\\reportWebVitals.js":"9","D:\\projects\\calculator\\client\\src\\Calc\\CalcProcessing.js":"10","D:\\projects\\calculator\\client\\src\\Calc\\Table.js":"11"},{"size":517,"mtime":1619368597337,"results":"12","hashOfConfig":"13"},{"size":438,"mtime":1619368607072,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1618228900235,"results":"15","hashOfConfig":"13"},{"size":706,"mtime":1619708309861,"results":"16","hashOfConfig":"13"},{"size":5714,"mtime":1619897362478,"results":"17","hashOfConfig":"13"},{"size":2316,"mtime":1618228900233,"results":"18","hashOfConfig":"13"},{"size":517,"mtime":1619897695557,"results":"19","hashOfConfig":"20"},{"size":438,"mtime":1619897695553,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1619897695558,"results":"22","hashOfConfig":"20"},{"size":5719,"mtime":1619951448710,"results":"23","hashOfConfig":"20"},{"size":2316,"mtime":1619897695554,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1drpy74",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11l2u42",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\calculator-back\\client\\src\\index.js",[],["50","51"],"D:\\projects\\calculator-back\\client\\src\\App.js",["52"],"import React from \"react\";\r\nimport CalcProcessing from \"./Calc/CalcProcessing\";\r\n// import LoginModule from \"./Menu/Login\";\r\nimport samuel from \"./Calc/samuel2.jpg\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <img src={samuel} />\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        {/* <LoginModule /> */}\r\n        <CalcProcessing />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\projects\\calculator-back\\client\\src\\reportWebVitals.js",[],"D:\\projects\\calculator-back\\client\\src\\Menu\\Login.js",["53","54"],"D:\\projects\\calculator-back\\client\\src\\Calc\\CalcProcessing.js",["55"],"D:\\projects\\calculator-back\\client\\src\\Calc\\Table.js",[],"D:\\projects\\calculator\\client\\src\\index.js",[],"D:\\projects\\calculator\\client\\src\\App.js",["56"],"D:\\projects\\calculator\\client\\src\\reportWebVitals.js",[],"D:\\projects\\calculator\\client\\src\\Calc\\CalcProcessing.js",["57"],"import React, { useState, useEffect } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nfunction CalcProcessing() {\r\n  let [fetchResult, setFetchResult] = React.useState([]);\r\n  const tryFetch = function () {\r\n    fetch(process.env.REACT_APP_BACK_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(buffer),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setFetchResult(data);\r\n        console.log('fetchResult: ', fetchResult);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let [buffer, setBuffer] = React.useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Обновляем заголовок документа с помощью API браузера\r\n    tryFetch();\r\n  });\r\n\r\n  function keyPressed(key, symbol, type) {\r\n    let comp = [{ key: key, symbol: symbol, type: type }];\r\n    const simpleInsert = function () {\r\n      return setBuffer(buffer.concat(comp));\r\n    };\r\n\r\n    if (buffer.length === 0) {\r\n      if (type === \"operation\" || type === \"point\") {\r\n        setBuffer(\r\n          buffer.concat([{ key: 0, symbol: 0, type: \"digit\" }]).concat(comp)\r\n        );\r\n      } else {\r\n        simpleInsert();\r\n      }\r\n    } else {\r\n      if (type === \"operation\") {\r\n        if (\r\n          buffer[buffer.length - 1].type === \"operation\" ||\r\n          buffer[buffer.length - 1].type === \"point\"\r\n        ) {\r\n          setBuffer(buffer.splice(0, buffer.length - 1).concat(comp));\r\n        } else {\r\n          simpleInsert();\r\n        }\r\n      } else if (type === \"point\") {\r\n        if (buffer[buffer.length - 1].type === \"point\") {\r\n        } else if (buffer[buffer.length - 1].type === \"operation\") {\r\n          setBuffer(\r\n            buffer.concat([{ key: 0, symbol: 0, type: \"digit\" }]).concat(comp)\r\n          );\r\n        } else {\r\n          let flag = false;\r\n          if (\r\n            buffer\r\n              .map((item) => {\r\n                if (item.type === \"point\") {\r\n                  flag = true;\r\n                } else if (item.type === \"operation\") {\r\n                  flag = false;\r\n                }\r\n                return flag;\r\n              })\r\n              .pop() === false\r\n          ) {\r\n            simpleInsert();\r\n          }\r\n        }\r\n      } else if (key === 0) {\r\n        let flagZero = true;\r\n        let flagPoint = false;\r\n        let flagDigit = false;\r\n\r\n        buffer.map(function (item) {\r\n          if (item.key === 0) {\r\n            flagZero = false;\r\n          }\r\n          if (item.key > 0) {\r\n            flagZero = true;\r\n            flagDigit = true;\r\n          }\r\n          if (item.type === \"point\") {\r\n            flagZero = true;\r\n            flagPoint = true;\r\n          }\r\n          if (item.type === \"operation\") {\r\n            flagZero = true;\r\n            flagPoint = false;\r\n            flagDigit = false;\r\n          }\r\n          return undefined;\r\n        });\r\n\r\n        if ((flagZero || flagPoint || flagDigit) === true) {\r\n          setBuffer(buffer.concat(comp));\r\n        }\r\n      } else if (key > 0) {\r\n        if (buffer.length === 0) {\r\n          simpleInsert();\r\n        }\r\n\r\n        if (buffer.length !== 0) {\r\n          if (buffer[buffer.length - 1].key === 0) {\r\n            let flag1 = true;\r\n            let flag2 = true;\r\n\r\n            buffer.map(function (item) {\r\n              if (item.key > 0) {\r\n                flag1 = false;\r\n              }\r\n              if (item.type === \"point\") {\r\n                flag2 = false;\r\n              }\r\n\r\n              if (item.type === \"operation\") {\r\n                flag1 = true;\r\n                flag2 = true;\r\n              }\r\n              return undefined;\r\n            });\r\n\r\n            if (flag1 === true && flag2 === true) {\r\n              setBuffer(buffer.splice(0, buffer.length - 1).concat(comp));\r\n            } else {\r\n              simpleInsert();\r\n            }\r\n          } else {\r\n            simpleInsert();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function cancelEntry() {\r\n    setBuffer(buffer.splice(0, buffer.length - 1));\r\n  }\r\n  function clearAll() {\r\n    setBuffer([]);\r\n  }\r\n\r\n  function getResult() {\r\n    setBuffer([{ key: fetchResult, symbol: fetchResult, type: \"number\" }]);\r\n  }\r\n  // let res;\r\n  // function CalculateResult() {\r\n  //   if (buffer.length === 0) {\r\n  //     res = 0;\r\n  //   }\r\n  //   if (buffer.length !== 0) {\r\n  //     if (buffer[buffer.length - 1].type === \"number\") {\r\n  //       res = eval(\r\n  //         buffer\r\n  //           .map((item) => {\r\n  //             return item.key;\r\n  //           })\r\n  //           .join(\"\")\r\n  //       );\r\n  //     } else {\r\n  //       res = eval(\r\n  //         buffer\r\n  //           .slice(0, buffer.length - 1)\r\n  //           .map((item) => {\r\n  //             return item.key;\r\n  //           })\r\n  //           .join(\"\")\r\n  //       );\r\n  //     }\r\n  //   }\r\n  //   console.log(buffer);\r\n  //   return <h1>Result: {fetchResult}</h1>;\r\n  // }\r\n\r\n  function BufferOperation() {\r\n    let buff;\r\n    if (buffer.length === 0) {\r\n      buff = 0;\r\n    }\r\n    if (buffer.length !== 0) {\r\n      buff = buffer\r\n        .map(function (item) {\r\n          return item.symbol;\r\n        })\r\n        .join(\"\");\r\n    }\r\n    return <h1>Buffer: {buff}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>ENGLISH, MOTHERFUCKER!!!!</h1>\r\n      {/* <CalculateResult /> */}\r\n      <h1>Result: {fetchResult}</h1>\r\n      <BufferOperation />\r\n      <Table\r\n        keyPressed={keyPressed}\r\n        cancelEntry={cancelEntry}\r\n        clearAll={clearAll}\r\n        getResult={getResult}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalcProcessing;\r\n","D:\\projects\\calculator\\client\\src\\Calc\\Table.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":10,"column":9,"nodeType":"64","endLine":10,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":4,"column":7,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"69","line":11,"column":14,"nodeType":"67","messageId":"68","endLine":11,"endColumn":25},{"ruleId":"65","severity":1,"message":"70","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":10,"column":9,"nodeType":"64","endLine":10,"endColumn":29},{"ruleId":"65","severity":1,"message":"70","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'handleClick' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]