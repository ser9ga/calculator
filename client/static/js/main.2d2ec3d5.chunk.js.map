{"version":3,"sources":["Calc/Table.js","Calc/CalcProcessing.js","Calc/samuel2.jpg","App.js","reportWebVitals.js","index.js"],"names":["Table","keyPressed","cancelEntry","clearAll","getResult","styles","digit","width","height","margin","fontSize","borderRadius","borderWidth","functional","background","button","key","symbol","type","styling","style","onClick","CalcProcessing","React","useState","fetchResult","setFetchResult","buffer","setBuffer","BufferOperation","buff","length","map","item","join","useEffect","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","catch","err","comp","simpleInsert","concat","splice","flag","pop","flagZero","flagPoint","flagDigit","flag1","flag2","App","className","src","samuel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d2ec3d5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\nfunction Table({ keyPressed, cancelEntry, clearAll, getResult }) {\r\n  const styles = {\r\n    button: {\r\n      digit: {\r\n        width: \"100px\",\r\n        height: \"50px\",\r\n        margin: \"3px\",\r\n        fontSize: \"25pt\",\r\n        borderRadius: \"7px\",\r\n        borderWidth: \"1px\",\r\n      },\r\n      functional: {\r\n        width: \"100px\",\r\n        height: \"50px\",\r\n        margin: \"3px\",\r\n        fontSize: \"25pt\",\r\n        background: \"silver\",\r\n        borderRadius: \"7px\",\r\n        borderWidth: \"1px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  \r\n  const button = function (key, symbol, type) {\r\n    if (typeof key === \"number\") {\r\n      symbol = key;\r\n      type = \"number\";\r\n    }\r\n    let styling;\r\n    if (typeof key === \"number\" || type === \"point\") {\r\n      styling = styles.button.digit;\r\n    } else {\r\n      styling = styles.button.functional;\r\n    }\r\n\r\n    return (\r\n      <td>\r\n        <button\r\n          style={styling}\r\n          onClick={() => {\r\n            if (type === \"number\" || \"point\" || \"operation\") {\r\n              keyPressed(key, symbol, type);\r\n            }\r\n            if (type === \"cancelEntry\") {\r\n              cancelEntry();\r\n            }\r\n            if (type === \"clearAll\") {\r\n              clearAll();\r\n            }\r\n            if (type === \"getResult\") {\r\n              getResult();\r\n            }\r\n          }}\r\n        >\r\n          {symbol}\r\n        </button>\r\n      </td>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          {button(1)}\r\n          {button(2)}\r\n          {button(3)}\r\n          {button(\"/\", \"÷\", \"operation\")}\r\n        </tr>\r\n        <tr>\r\n          {button(4)}\r\n          {button(5)}\r\n          {button(6)}\r\n          {button(\"*\", \"×\", \"operation\")}\r\n        </tr>\r\n        <tr>\r\n          {button(7)}\r\n          {button(8)}\r\n          {button(9)}\r\n          {button(\"-\", \"-\", \"operation\")}\r\n        </tr>\r\n        <tr>\r\n          {button(\"CE\", \"CE\", \"cancelEntry\")}\r\n          {button(0)}\r\n          {button(\".\", \".\", \"point\")}\r\n          {button(\"+\", \"+\", \"operation\")}\r\n        </tr>\r\n        <tr>\r\n          {button(\"C\", \"C\", \"clearAll\")}\r\n          <td></td>\r\n          <td></td>\r\n          {button(\"=\", \"=\", \"getResult\")}\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nfunction CalcProcessing() {\r\n  let [fetchResult, setFetchResult] = React.useState([]);\r\n  const tryFetch = function () {\r\n    fetch(\"/back\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(buffer),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setFetchResult(data);\r\n        console.log('fetchResult: ', fetchResult);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let [buffer, setBuffer] = React.useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Обновляем заголовок документа с помощью API браузера\r\n    tryFetch();\r\n  });\r\n\r\n  function keyPressed(key, symbol, type) {\r\n    let comp = [{ key: key, symbol: symbol, type: type }];\r\n    const simpleInsert = function () {\r\n      return setBuffer(buffer.concat(comp));\r\n    };\r\n\r\n    if (buffer.length === 0) {\r\n      if (type === \"operation\" || type === \"point\") {\r\n        setBuffer(\r\n          buffer.concat([{ key: 0, symbol: 0, type: \"digit\" }]).concat(comp)\r\n        );\r\n      } else {\r\n        simpleInsert();\r\n      }\r\n    } else {\r\n      if (type === \"operation\") {\r\n        if (\r\n          buffer[buffer.length - 1].type === \"operation\" ||\r\n          buffer[buffer.length - 1].type === \"point\"\r\n        ) {\r\n          setBuffer(buffer.splice(0, buffer.length - 1).concat(comp));\r\n        } else {\r\n          simpleInsert();\r\n        }\r\n      } else if (type === \"point\") {\r\n        if (buffer[buffer.length - 1].type === \"point\") {\r\n        } else if (buffer[buffer.length - 1].type === \"operation\") {\r\n          setBuffer(\r\n            buffer.concat([{ key: 0, symbol: 0, type: \"digit\" }]).concat(comp)\r\n          );\r\n        } else {\r\n          let flag = false;\r\n          if (\r\n            buffer\r\n              .map((item) => {\r\n                if (item.type === \"point\") {\r\n                  flag = true;\r\n                } else if (item.type === \"operation\") {\r\n                  flag = false;\r\n                }\r\n                return flag;\r\n              })\r\n              .pop() === false\r\n          ) {\r\n            simpleInsert();\r\n          }\r\n        }\r\n      } else if (key === 0) {\r\n        let flagZero = true;\r\n        let flagPoint = false;\r\n        let flagDigit = false;\r\n\r\n        buffer.map(function (item) {\r\n          if (item.key === 0) {\r\n            flagZero = false;\r\n          }\r\n          if (item.key > 0) {\r\n            flagZero = true;\r\n            flagDigit = true;\r\n          }\r\n          if (item.type === \"point\") {\r\n            flagZero = true;\r\n            flagPoint = true;\r\n          }\r\n          if (item.type === \"operation\") {\r\n            flagZero = true;\r\n            flagPoint = false;\r\n            flagDigit = false;\r\n          }\r\n          return undefined;\r\n        });\r\n\r\n        if ((flagZero || flagPoint || flagDigit) === true) {\r\n          setBuffer(buffer.concat(comp));\r\n        }\r\n      } else if (key > 0) {\r\n        if (buffer.length === 0) {\r\n          simpleInsert();\r\n        }\r\n\r\n        if (buffer.length !== 0) {\r\n          if (buffer[buffer.length - 1].key === 0) {\r\n            let flag1 = true;\r\n            let flag2 = true;\r\n\r\n            buffer.map(function (item) {\r\n              if (item.key > 0) {\r\n                flag1 = false;\r\n              }\r\n              if (item.type === \"point\") {\r\n                flag2 = false;\r\n              }\r\n\r\n              if (item.type === \"operation\") {\r\n                flag1 = true;\r\n                flag2 = true;\r\n              }\r\n              return undefined;\r\n            });\r\n\r\n            if (flag1 === true && flag2 === true) {\r\n              setBuffer(buffer.splice(0, buffer.length - 1).concat(comp));\r\n            } else {\r\n              simpleInsert();\r\n            }\r\n          } else {\r\n            simpleInsert();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function cancelEntry() {\r\n    setBuffer(buffer.splice(0, buffer.length - 1));\r\n  }\r\n  function clearAll() {\r\n    setBuffer([]);\r\n  }\r\n\r\n  function getResult() {\r\n    setBuffer([{ key: fetchResult, symbol: fetchResult, type: \"number\" }]);\r\n  }\r\n  // let res;\r\n  // function CalculateResult() {\r\n  //   if (buffer.length === 0) {\r\n  //     res = 0;\r\n  //   }\r\n  //   if (buffer.length !== 0) {\r\n  //     if (buffer[buffer.length - 1].type === \"number\") {\r\n  //       res = eval(\r\n  //         buffer\r\n  //           .map((item) => {\r\n  //             return item.key;\r\n  //           })\r\n  //           .join(\"\")\r\n  //       );\r\n  //     } else {\r\n  //       res = eval(\r\n  //         buffer\r\n  //           .slice(0, buffer.length - 1)\r\n  //           .map((item) => {\r\n  //             return item.key;\r\n  //           })\r\n  //           .join(\"\")\r\n  //       );\r\n  //     }\r\n  //   }\r\n  //   console.log(buffer);\r\n  //   return <h1>Result: {fetchResult}</h1>;\r\n  // }\r\n\r\n  function BufferOperation() {\r\n    let buff;\r\n    if (buffer.length === 0) {\r\n      buff = 0;\r\n    }\r\n    if (buffer.length !== 0) {\r\n      buff = buffer\r\n        .map(function (item) {\r\n          return item.symbol;\r\n        })\r\n        .join(\"\");\r\n    }\r\n    return <h1>Buffer: {buff}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>ENGLISH, MOTHERFUCKER!!!</h1>\r\n      {/* <CalculateResult /> */}\r\n      <h1>Result: {fetchResult}</h1>\r\n      <BufferOperation />\r\n      <Table\r\n        keyPressed={keyPressed}\r\n        cancelEntry={cancelEntry}\r\n        clearAll={clearAll}\r\n        getResult={getResult}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalcProcessing;\r\n","export default __webpack_public_path__ + \"static/media/samuel2.33ef9259.jpg\";","import React from \"react\";\r\nimport CalcProcessing from \"./Calc/CalcProcessing\";\r\n// import LoginModule from \"./Menu/Login\";\r\nimport samuel from \"./Calc/samuel2.jpg\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <img src={samuel} />\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        {/* <LoginModule /> */}\r\n        <CalcProcessing />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}